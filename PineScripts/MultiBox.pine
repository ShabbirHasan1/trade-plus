// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © phalvinayak

//@version=5
indicator(title="VinsMultiBox", shorttitle="Vins⚜Box", format=format.price)

////////////////SETTINGS-STARTS////////////////
iType = input.string(defval='HM', title='Indicator type', options=["HM", "CCI", "RSI", "EF", "VOLUME", "VINS-VOLUME"], group='Select Indicator', inline='Common Setting')
////////////////SETTINGS-ENDS////////////////

////////////////CCI-STARTS////////////////
isCCI = iType == "CCI" ? true : false
cciLen1 = 25
cciSrc = ohlc4
cci1 = (cciSrc - ta.sma(cciSrc, cciLen1)) / (0.015 * ta.dev(cciSrc, cciLen1))

cciLen2 = 50
cci2 = (cciSrc - ta.sma(cciSrc, cciLen2)) / (0.015 * ta.dev(cciSrc, cciLen2))

// cciMa = ta.ema(cci, 10)
// plot(isCCI?ta.wma(cci2, 10):na, "CCI", color=color.red)
plot(isCCI?cci1:na, "CCI-25", color=#2962FF)
plot(isCCI?cci2:na, "CCI-50", color=color.green)
cciBand0 = hline(isCCI?100:na, "Upper Band", color=#787B86, linestyle=hline.style_dashed)
cciBand1 = hline(isCCI?-100:na, "Lower Band", color=#787B86, linestyle=hline.style_dashed)
fill(cciBand0, cciBand1, color=color.rgb(33, 150, 243, 90), title="Background")
hline(isCCI?0:na, "Zero Line", color=#787B86, linestyle=hline.style_solid)
////////////////CCI-ENDS////////////////

////////////////HILEGA MILEGA STARTS////////////////
isHM = iType == "HM" ? true : false
hmLen = 9
hmSrc = close

hmRsi = ta.rsi(hmSrc,hmLen)
hmH50Plot=plot(isHM?50:na,color=color.green,style=plot.style_line, linewidth=1)
hmRsiPlot=plot(isHM?hmRsi:na,color=#000000,style=plot.style_line,linewidth=1, title="HM-RSI")
fill(hmRsiPlot, hmH50Plot, color=hmRsi>50?color.new(#FF5E66,60) : color.new(#05C3FC, 60))
plot(isHM?ta.wma(hmRsi,21):na, color=#FC0008, style=plot.style_line, linewidth=1, title="HM-Strength")
plot(isHM?ta.ema(hmRsi,3):na, color=#12B818, style=plot.style_line, linewidth=1,title="HM-Price")
////////////////HILEGA MILEGA ENDS////////////////

////////////////RSI STARTS////////////////
isRSI = iType == "RSI" ? true : false
rsiLen = 4
rsiSrc = close
factor = 10

rsi = ta.rsi(rsiSrc, rsiLen)
// rs = (rsi/(100-rsi))*factor
// plot(isRSI?rs:na,color=color.green, style=plot.style_line, linewidth=1)

// rsi2 = ta.rsi(rsiSrc, 20)
// rs2 = (rsi2/(100-rsi2))*factor
// plot(isRSI?rs2:na,color=color.red, style=plot.style_line, linewidth=1)
rsiH60Plot=plot(isRSI?60:na,color=#000000,style=plot.style_line, linewidth=1)
rsiH50Plot=plot(isRSI?50:na,color=#FF0000,style=plot.style_line, linewidth=1)
risH40Plot=plot(isRSI?40:na,color=#000000,style=plot.style_line, linewidth=1)
risH20Plot=plot(isRSI?20:na,color=color.new(color.green, 20),style=plot.style_line, linewidth=1)
rsiPlot=plot(isRSI?rsi:na,color=#000000,style=plot.style_line, linewidth=1, title="RSI")
fill(rsiH60Plot, rsiPlot, color=isRSI and rsi > 60 ? color.new(#00FF00,80) : na)
fill(risH40Plot, rsiPlot, color=isRSI and rsi < 40 ? color.new(#FF0000, 80) : na)
////////////////RSI ENDS////////////////


////////////////VOLUME STARTS///////////////
isVOL = iType == "VOLUME" ? true : false
plot(isVOL ? volume: na, color=close>=open?color.new(color.green, 50):color.new(color.red, 50), title="VolumeGraph", style=plot.style_columns)
plot(isVOL ? ta.ema(volume, 20): na, color=color.new(color.blue, 0), linewidth=2, title="VolMA-20", style=plot.style_line)
plot(isVOL ? ta.ema(volume, 50): na, color=color.new(color.black, 0), linewidth=2, title="VolMA-50", style=plot.style_line)
plot(isVOL ? ta.ema(volume, 100): na, color=color.new(color.orange, 0), linewidth=2, title="VolMA-100", style=plot.style_line)
////////////////VOLUME ENDS///////////////


////////////////VINS-VOLUME START///////////////
isVVOL = iType == "VINS-VOLUME" ? true : false
pineVinsVolume(y) =>
    float rVolume = 0.0
    float gVolume = 0.0
    for i = 0 to y - 1
        gVolume := gVolume + math.round(volume[i] * (close[i] - low[i]) / (high[i] - low[i]))
        rVolume := rVolume + math.round(volume[i] * (high[i] - close[i]) / (high[i] - low[i]))
    // 	if(close[i] >= open[i])
    // 		gVolume:= gVolume + volume[i]
    // 	else
    // 		rVolume:= rVolume + volume[i]
    [gVolume, rVolume]
[gVol, rVol] = pineVinsVolume(20)
plot(isVVOL ? ta.wma(gVol, 10): na, color=color.new(color.green, 0), linewidth=2, title="vVolGreen", style=plot.style_line)
plot(isVVOL ? ta.wma(rVol, 10): na, color=color.new(color.red, 0), linewidth=2, title="vVolRed", style=plot.style_line)
////////////////VINS-VOLUME ENDS///////////////

////////////////ELHER-FIHSER///////////////
isEF = iType == "EF" ? true : false
Length = 10
xHL2 = hl2
xMaxH = ta.highest(xHL2, Length)
xMinL = ta.lowest(xHL2,Length)
nValue1 = 0.0
nValue1 := 0.33 * 2 * ((xHL2 - xMinL) / (xMaxH - xMinL) - 0.5) + 0.67 * nz(nValue1[1])
nValue2 = nValue1 > .99 ? .999 :
          nValue1 < -.99 ? -.999 : nValue1
nFish = 0.0
nFish := 0.5 * math.log((1 + nValue2) / (1 - nValue2)) + 0.5 * nz(nFish[1])

// Elher Fisher level for the OB and OS level
plot(isEF?2:na,color=#000000,style=plot.style_line, linewidth=1)
plot(isEF?-2:na,color=#000000,style=plot.style_line, linewidth=1)

plot(isEF ? nFish: na, color=color.green, title="Fisher")
plot(isEF ? nz(nFish[1]): na, color=color.red, title="Trigger")
////////////////ELHER-FIHSER-ENDS///////////////
